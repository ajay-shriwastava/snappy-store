####################################################################################################
# PLEASE KEEP THE WIDTH OF THE LINES BELOW WITHIN 100 CHARACTERS.                                  #
# MOST RECENT CHANGE AT THE TOP.                                                                   #
# KEEP THE DESCRIPTION OF EACH OF YOUR CHANGES THAT NEEDS TO BE PUT INTO THE RELEASE NOTES TO ONE  #
# TO THREE LINES.                                                                                  #
# KEEP A LINE BLANK BETWEEN TWO NOTES.                                                             #
# ADD THE JIRA TICKET ID, IF APPLICABLE.                                                           #
####################################################################################################


Release 1.5.3

Bug Fixes

  [SNAP-1253] Code changes to identify whether member is a Data Server.

  [SNAP-1112] Query hints for executionEngine doesn't work correctly.

  [AQP-263] Updating reservoir size calculation for stats.

  [SNAP-1238] LockTimeoutException while restarting the abruptly killed server node.

  [SNAP-1240] Snappy monitoring dashboard.

  Improving entry size estimation.

  [SNAP-1237] Set batchID to NULL in a synchronized block which was responsible for generating new
    batchUUID.

  Fixing multiple issues with sizing in SnappyRegionStatsCollectorFunction.

  Fixing routing for queries with subqueries in GROUP BY that fail with AssertFailure currently.

  [SNAP-1228] Drop table command hangs when executed multiple times on JDBC connection.

  Route CREATE INDEX and DROP INDEX statements to Lead node of SnappyData cluster.

  Use a more efficient UUID generation than UUID.randomUUID()

  [SNAP-1199] ServerGroupUtils.isGroupMember should return false if groups is null.

  [SNAP-1191] Store side changes for plan caching.

  Allow for flush with batchSize smaller than the hard-coded minBatchSize (currently 200).

  [AQP-219] Display row count for sample tables in SnappyData Dashboard.

  Avoid lazy initialization of dsys/logger in GfxdReentrantReadWriteLock.

  [SNAP-999] Added code to send the install jar message to lead nodes as well.

  [SNAP-1179] Mark YEAR, HOUR, MINUTE, SECOND as non-reserved (#124)

  [AQP-79] Put reservoir in regions than in-memory data structure. The proposed changed are only for
    sampling done on a given fraction %. But can be extended to all other scenario. Also implement 
    changes for partitioned sample table.

  Clear executionEngine in CompilerContextImpl.resetContext(). Fixes executionEngine flag being
    "sticky" issue in the same session.

  [SNAP-1075] A function implementation that reads the regionBean stats to show it on UI. For column
    table initial row counts is calculated at server start.

  [SNAP-1140] Performance issues seen in query re-routing.

  [SNAP-1084] Fix GemFire/Snappy activation classes to return proper classLoaderVersion.

  [SNAP-1096] Add Lead attribute in Member MBean.


Release 1.5.0

New Features

* A new tool to collect the debug artifacts like logs, stats file and stack dumps, automatically 
  and output as a tar zipped file. Time range based collection is also provided.

* Index checker validates the consistency and integrity of indexes and gets automatically recreated
  upon restart, if required.
 
* New procedures to check the sanity of indexes during run time as well.

* New SnappyData start and stop scripts to start and shut down cluster.

* Much faster re-balance operations. The rebalance takes in consideration all the Partitioned 
  Regions rather than one by one.

Bug Fixes

* snap-849 - Batch insert failed with false duplicate key violation exception when an entry reached
             a secondary copy through gii as well as direct distribution. This was a problm only 
             when a member is starting up. 

* snap-761 - After an alter table which was adding a lob column, sometimes after a restart a wrong
             rowformatter object was being used to deserialize a row resulting in 
             ClassCastExceptions.

* snap-766 - Another manifestation of wrong rowformatter being picked up after an alter table 
             happened resulting in java.lang.AssertionError

* snap-619 - Index maintenance exception thrown while performing update in a transaction. This 
             could lead to unnecessary failure of the operation.

* snap-709 - Not getting expected conflicts when a child was performing foreign key constraint 
             check on parent table.

* snap-762 - Closing underlying nio channel which was not letting to delete the nfs directory, used
             for diskstore, even after the process was shut down.

* snap-736 - Delete operations on replicated tables were not getting committed.

* snap-700 - An older region version vector was getting recorded when an event was coming both 
             through gii as well as direct distribution to secondary. This was happening in a 
             very small window of time when a new member was coming up and declaring itself to
             its peers and at the same time an update was coming.

* snap-702 - The flushing of persisted index entries during rollover was getting very slow when 
             eviction was up. When the number of entries was high this was very slow and made the
             system look to be in a hung state. Now flushing it in a much bigger batch fixed it.

* snap-687 - The client connection was losing its default schema information on failover.

* 41995    - [trac] Even Delete and Truncate statements were getting cancelled due to low memory 
             exceptions. Now letting these statements execute so that they can free up heap space.

* 52173    - [trac] Because of an underlying NegativeArraySizeException in the JGroups layer some
             of the replies were never coming and the system hung. Ported from Geode. 

* 51906    - [trac] Fix for ClassCastException. ColumnQueryInfo cannot be cast to 
             com.pivotal.gemfirexd.internal.engine.distributed.metadata.ValueQueryInfo. Only 
             convert those updates to put convertible which has absolute value rather than 
             other column references.

* 47330    - Lock timed out in alter table. Simplification of ddl replay fixed it.

* 51379    - select query with group by failed with Java exception: 'mismatch of versions:
             formatter=2, fromBytes=1: java.lang.AssertionError. Another manifestation of SNAP-766.

* 50430    - A restarted data node is stuck at UpdateAttributesProcessor.waitForProfileResponse.
             Simplification of ddl replay fixed it.

* 51082    - Can not DROP or TRUNCATE once low memory is hit, failed at prepare statement.
             Even if low memory is detected by resource manager these actions are let through as
             they clean the memory

* 51255    - Incorrect XCL54 exception thrown when there should be enough heap memory. A very
             transient spike in memory was leading to this. Now the generation of low memory
             exception is delayed a bit to check if the heap has come back to normal.

* 44936    - An insert was successful in replicated table on some of the nodes even though it
             gets constraint violation. An insert coming before the gii is completed on a restarted
             or new node could lead to this. These are categorized as suspect events and
             re-processed at the end of gii.

* 51328    - UTFDataFormatException while executing select query in thin client Ha test. Wrong
             rowformatter being picked after alter table and node restart.

* GEMXD-3  - Initializing netserver with all the properties. Some configuration properties were
             missing when reconnecting automatically.

* GEMXD-19 - Cleaning the index corresponding to rows in previously hosted bucket but discarded
             on restart. This was resulting on wrong counts when where clause contained indexes 
             and the query plan picked indexes instead of table scan.

* GEMXD-39 - Added few more items to LinuxSystemStats:
             totalFileDescriptors - total number of open file handles in this machine
             fileDescriptorsSystemMax - OS limit of maximum number of open file handles
             totalThreads - total number of threads in this machine
             threadsSessionMax - OS limit of maximum number of threads+processes
               for current login session
             threadsSystemMax - OS limit of maximum number of threads+processes on this machine

