<?xml version="1.0" encoding="ISO-8859-15"?>
<!--
  Copyright (c) 2010-2015 Pivotal Software, Inc. All rights reserved.
 
  Licensed under the Apache License, Version 2.0 (the "License"); you
  may not use this file except in compliance with the License. You
  may obtain a copy of the License at
 
  http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
  implied. See the License for the specific language governing
  permissions and limitations under the License. See accompanying
  LICENSE file.
-->
<!DOCTYPE document PUBLIC "-//APACHE//DTD Documentation V2.0//EN" "http://forrest.apache.org/dtd/document-v20.dtd">
<document> 
  <header> 
    <title>GemFireXD</title>
  </header> 
  <body> 
    <p>
      This customized version of DdlUtils supports <a href="ext:gemfirexd">GemFireXD</a>
      version 1.0 and above. Information about the SQL elements and datatypes of GemFireXD
      is found in the <a href="ext:gemfirexd/ref-guide">vFabric GemFireXD Reference</a>.
    </p>
    <p>&nbsp;</p>
    <p>
      Platform identifiers:
    </p>
    <ul>
      <li><code>GemFireXD</code> for the GemFireXD platform</li>
    </ul>
    <p>&nbsp;</p>
    <p>
      Recognized JDBC drivers:
    </p>
    <ul>
      <li><code>io.snappydata.jdbc.ClientDriver</code></li>
      <li><code>com.pivotal.gemfirexd.jdbc.EmbeddedDriver</code></li>
    </ul>
    <p>&nbsp;</p>
    <p>
      Recognized JDBC sub protocols:
    </p>
    <ul>
      <li><code>jdbc:gemfirexd</code></li>
    </ul>
    <p>&nbsp;</p>
    <table>
      <tr>
        <td class="platformPropName">The database supports SQL comments</td>
        <td class="platformPropValue">yes</td>
      </tr>
      <tr>
        <td class="platformPropName">The database supports delimited identifiers</td>
        <td class="platformPropValue">yes</td>
      </tr>
      <tr>
        <td class="platformPropName">The database's maximum identifier length</td>
        <td class="platformPropValue">128</td>
      </tr>
      <tr>
        <td class="platformPropName">The database supports default values for <code>LONG</code> types</td>
        <td class="platformPropValue">yes</td>
      </tr>
      <tr>
        <td class="platformPropName">DdlUtils uses sequences for identity columns</td>
        <td class="platformPropValue">no</td>
      </tr>
      <tr>
        <td class="platformPropName">The database supports non-primary key columns as identity columns</td>
        <td class="platformPropValue">yes</td>
      </tr>
      <tr>
        <td class="platformPropName">The database allows INSERT/UPDATE statements to set values for identity columns</td>
        <td class="platformPropValue">yes</td>
      </tr>
      <tr>
        <td class="platformPropName">DdlUtils can read back the auto-generated value of an identity column</td>
        <td class="platformPropValue">yes</td>
      </tr>
      <tr>
        <td class="platformPropName">The database supports non-unique indices</td>
        <td class="platformPropValue">yes</td>
      </tr>
      <tr>
        <td class="platformPropName">DdlUtils can create a database via JDBC</td>
        <td class="platformPropValue">n/a</td>
      </tr>
      <tr>
        <td class="platformPropName">DdlUtils can drop a database via JDBC</td>
        <td class="platformPropValue">n/a</td>
      </tr>
    </table>
    <p>&nbsp;</p>
    <table>
      <tr>
        <th class="typeMappingJdbcType">JDBC Type</th>
        <th class="typeMappingNativeType">Database Type</th>
        <th class="typeMappingComments">Additional comments</th>
      </tr>
      <tr>
        <td>ARRAY</td>
        <td>BLOB</td>
        <td>Will be read back as BLOB</td>
      </tr>
      <tr>
        <td>BIGINT</td>
        <td>BIGINT</td>
        <td></td>
      </tr>
      <tr>
        <td>BINARY</td>
        <td>CHAR(n) FOR BIT DATA</td>
        <td></td>
      </tr>
      <tr>
        <td>BIT</td>
        <td>SMALLINT</td>
        <td>GemFireXD has no native boolean type<br/>
            Will be read back as SMALLINT</td>
      </tr>
      <tr>
        <td>BLOB</td>
        <td>BLOB</td>
        <td></td>
      </tr>
      <tr>
        <td>BOOLEAN</td>
        <td>SMALLINT</td>
        <td>GemFireXD has no native boolean type<br/>
            Will be read back as BOOLEAN</td>
      </tr>
      <tr>
        <td>CHAR</td>
        <td>CHAR</td>
        <td></td>
      </tr>
      <tr>
        <td>CLOB</td>
        <td>CLOB</td>
        <td></td>
      </tr>
      <tr>
        <td>DATALINK</td>
        <td>LONG VARCHAR FOR BIT DATA</td>
        <td>Will be read back as LONGVARBINARY</td>
      </tr>
      <tr>
        <td>DATE</td>
        <td>DATE</td>
        <td></td>
      </tr>
      <tr>
        <td>DECIMAL</td>
        <td>DECIMAL</td>
        <td></td>
      </tr>
      <tr>
        <td>DISTINCT</td>
        <td>BLOB</td>
        <td>Will be read back as BLOB</td>
      </tr>
      <tr>
        <td>DOUBLE</td>
        <td>DOUBLE</td>
        <td></td>
      </tr>
      <tr>
        <td>FLOAT</td>
        <td>DOUBLE</td>
        <td>Will be read back as DOUBLE</td>
      </tr>
      <tr>
        <td>INTEGER</td>
        <td>INTEGER</td>
        <td></td>
      </tr>
      <tr>
        <td>JAVA_OBJECT</td>
        <td>BLOB</td>
        <td>Will be read back as BLOB</td>
      </tr>
      <tr>
        <td>LONGVARBINARY</td>
        <td>LONG VARCHAR FOR BIT DATA</td>
        <td></td>
      </tr>
      <tr>
        <td>LONGVARCHAR</td>
        <td>LONG VARCHAR</td>
        <td></td>
      </tr>
      <tr>
        <td>NULL</td>
        <td>LONG VARCHAR FOR BIT DATA</td>
        <td>Will be read back as LONGVARBINARY</td>
      </tr>
      <tr>
        <td>NUMERIC</td>
        <td>NUMERIC</td>
        <td></td>
      </tr>
      <tr>
        <td>OTHER</td>
        <td>BLOB</td>
        <td>Will be read back as BLOB</td>
      </tr>
      <tr>
        <td>REAL</td>
        <td>REAL</td>
        <td></td>
      </tr>
      <tr>
        <td>REF</td>
        <td>LONG VARCHAR FOR BIT DATA</td>
        <td>Will be read back as LONGVARBINARY</td>
      </tr>
      <tr>
        <td>SMALLINT</td>
        <td>SMALLINT</td>
        <td></td>
      </tr>
      <tr>
        <td>STRUCT</td>
        <td>BLOB</td>
        <td>Will be read back as BLOB</td>
      </tr>
      <tr>
        <td>TIME</td>
        <td>TIME</td>
        <td></td>
      </tr>
      <tr>
        <td>TIMESTAMP</td>
        <td>TIMESTAMP</td>
        <td></td>
      </tr>
      <tr>
        <td>TINYINT</td>
        <td>SMALLINT</td>
        <td>Will be read back as SMALLINT</td>
      </tr>
      <tr>
        <td>VARBINARY</td>
        <td>VARCHAR(n) FOR BIT DATA</td>
        <td></td>
      </tr>
      <tr>
        <td>VARCHAR</td>
        <td>VARCHAR</td>
        <td></td>
      </tr>
    </table>
  </body>
</document>
